{
	"info": {
		"_postman_id": "297d814a-8619-4a00-b4c4-eee89174a07c",
		"name": "Desafio Spring",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Cadastro de Produtos",
			"item": [
				{
					"name": "Cadastro de produtos válidos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n  {\n    \"name\": \"Serra de Bancada\",\n    \"category\": \"{{categoria}}\",\n    \"brand\": \"FORTGPRO\",\n    \"price\": 1800.00,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n  },\n  {\n    \"name\": \"Furadeira\",\n    \"category\": \"{{categoria}}\",\n    \"brand\": \"Black & Decker\",\n    \"price\": 500,\n    \"quantity\": 7,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n  },\n  {\n    \"name\": \"Soldadora\",\n    \"category\": \"{{categoria}}\",\n    \"brand\": \"Black & Decker\",\n    \"price\": 350.00,\n    \"quantity\": 10,\n    \"freeShipping\": false,\n    \"prestige\": \"***\"\n  },\n  {\n    \"name\": \"Chuteira\",\n    \"category\": \"Esportes\",\n    \"brand\": \"Adidas\",\n    \"price\": 235.00,\n    \"quantity\": 6,\n    \"freeShipping\": true,\n    \"prestige\": \"*****\"\n  },\n  {\n    \"name\": \"Mini Cama elastica\",\n    \"category\": \"Esportes\",\n    \"brand\": \"Starboard\",\n    \"price\": 183.00,\n    \"quantity\": 4,\n    \"freeShipping\": true,\n    \"prestige\": \"*****\"\n  },\n  {\n    \"name\": \"Camiseta\",\n    \"category\": \"Esportes\",\n    \"brand\": \"Topper\",\n    \"price\": 80.00,\n    \"quantity\": 2,\n    \"freeShipping\": false,\n    \"prestige\": \"***\"\n  },\n  {\n    \"name\": \"Redmi Note 9\",\n    \"category\": \"Celulares\",\n    \"brand\": \"Xiaomi\",\n    \"price\": 2800.00,\n    \"quantity\": 15,\n    \"freeShipping\": true,\n    \"prestige\": \"****\"\n  },\n  {\n    \"name\": \"Smartwatch\",\n    \"category\": \"Celulares\",\n    \"brand\": \"Noga\",\n    \"price\": 1200.00,\n    \"quantity\": 5,\n    \"freeShipping\": true,\n    \"prestige\": \"**\"\n  },\n  {\n    \"name\": \"Camisa\",\n    \"category\": \"Roupas\",\n    \"brand\": \"Fila\",\n    \"price\": 79.00,\n    \"quantity\": 2,\n    \"freeShipping\": false,\n    \"prestige\": \"***\"\n  },\n  {\n    \"name\": \"Calcas\",\n    \"category\": \"Roupas\",\n    \"brand\": \"Oakley\",\n    \"price\": 73.00,\n    \"quantity\": 6,\n    \"freeShipping\": false,\n    \"prestige\": \"***\"\n  },\n  {\n    \"name\": \"Meias\",\n    \"category\": \"Roupas\",\n    \"brand\": \"Gonew\",\n    \"price\": 10.00,\n    \"quantity\": 8,\n    \"freeShipping\": false,\n    \"prestige\": \"*\"\n  },\n  {\n    \"name\": \"Shorts\",\n    \"category\": \"Roupas\",\n    \"brand\": \"Lacoste\",\n    \"price\": 275.00,\n    \"quantity\": 9,\n    \"freeShipping\": true,\n    \"prestige\": \"***\"\n  }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": [
						{
							"name": "Cadastro de produtos válidos",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "[\n    {\n        \"name\":\"Serra de Bancada\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"FORTGPRO\",\n        \"price\":1800.00,\n        \"quantity\":5,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    },\n    {\n        \"name\":\"Furadeira\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"Black & Decker\",\n        \"price\":500.00,\n        \"quantity\":7,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    }\n]\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base}}/api/v1/insert-articles-request",
									"host": [
										"{{base}}"
									],
									"path": [
										"api",
										"v1",
										"insert-articles-request"
									]
								}
							},
							"_postman_previewlanguage": "Text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Cadastro de produtos sem name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"category\":\"Ferramentas\",\n        \"brand\":\"FORTGPRO\",\n        \"price\":1800.00,\n        \"quantity\":5,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    },\n    {\n        \"name\":\"Furadeira\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"Black & Decker\",\n        \"price\":500.00,\n        \"quantity\":7,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    }\n]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				},
				{
					"name": "Cadastro de produtos sem category",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Serra de Bancada\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"FORTGPRO\",\n        \"price\":1800.00,\n        \"quantity\":5,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    },\n    {\n        \"name\":\"Furadeira\",\n        \"brand\":\"Black & Decker\",\n        \"price\":500.00,\n        \"quantity\":7,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    }\n]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				},
				{
					"name": "Cadastro de produtos sem brand",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Serra de Bancada\",\n        \"category\":\"Ferramentas\",\n        \"price\":1800.00,\n        \"quantity\":5,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    },\n    {\n        \"name\":\"Furadeira\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"Black & Decker\",\n        \"price\":500.00,\n        \"quantity\":7,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    }\n]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				},
				{
					"name": "Cadastro de produtos com price negativo",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Serra de Bancada\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"FORTGPRO\",\n        \"price\":-1800.00,\n        \"quantity\":5,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    },\n    {\n        \"name\":\"Furadeira\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"Black & Decker\",\n        \"price\":500.00,\n        \"quantity\":7,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    }\n]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				},
				{
					"name": "Cadastro de produtos com quantity negativa",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Serra de Bancada\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"FORTGPRO\",\n        \"price\":1800.00,\n        \"quantity\":-5,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    },\n    {\n        \"name\":\"Furadeira\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"Black & Decker\",\n        \"price\":500.00,\n        \"quantity\":7,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    }\n]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				},
				{
					"name": "Cadastro de produtos sem prestige",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"name\":\"Serra de Bancada\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"FORTGPRO\",\n        \"price\":1800.00,\n        \"quantity\":5,\n        \"freeShipping\":true,\n        \"prestige\":\"****\"\n    },\n    {\n        \"name\":\"Furadeira\",\n        \"category\":\"Ferramentas\",\n        \"brand\":\"Black & Decker\",\n        \"price\":500.00,\n        \"quantity\":7,\n        \"freeShipping\":true\n    }\n]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				},
				{
					"name": "Cadastro de produtos sem body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				},
				{
					"name": "Cadastro de produtos sem produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[]\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/insert-articles-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"insert-articles-request"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				},
				{
					"name": "Atualizar produto",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const echoPostRequest = {",
									"  ",
									"  url: 'localhost:8080/api/v1/insert-articles-request',",
									"  method: 'POST',",
									"  header: {",
									"        'content-type': 'application/json',",
									"    },",
									"  body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify([{",
									"            \"name\": \"Regata\",",
									"            \"category\": \"Roupas\",",
									"            \"brand\": \"Nike\",",
									"            \"price\": 1025.00,",
									"            \"quantity\": 2,",
									"            \"freeShipping\": true,",
									"            \"prestige\": \"****\"",
									"        }])",
									"    }",
									"};",
									"pm.sendRequest(echoPostRequest, function (err, response) {",
									"    var data = response.json();",
									"    pm.environment.set(\"productId\", data[0].productId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Teste de lista vazia\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.quantity).to.eql(9);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Regata\",\n    \"category\": \"Roupas\",\n    \"brand\": \"Nike\",\n    \"price\": 125.00,\n    \"quantity\": 9,\n    \"freeShipping\": true,\n    \"prestige\": \"*****\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/update-article-request/{{productId}}",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"update-article-request",
								"{{productId}}"
							]
						},
						"description": "Endpoint para inserção de produtos em lote."
					},
					"response": []
				}
			]
		},
		{
			"name": "Buscar Produtos",
			"item": [
				{
					"name": "Todos produtos",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							]
						},
						"description": "Endpoint para retornar a lista de todos os produtos."
					},
					"response": []
				},
				{
					"name": "Filtro por categoria",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Teste de lista vazia\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(3);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles?category={{categoria}}",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "category",
									"value": "{{categoria}}"
								}
							]
						},
						"description": "Endpoint para retornar uma lista de produtos filtrados por uma categoria."
					},
					"response": []
				},
				{
					"name": "Filtro por categoria inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Teste de lista vazia\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(0);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles?category=inexistente",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "category",
									"value": "inexistente"
								}
							]
						},
						"description": "Endpoint para retornar uma lista de produtos filtrados por uma categoria."
					},
					"response": []
				},
				{
					"name": "Filtro categoria e frete grátis",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Teste de lista vazia\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(2);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles?category={{categoria}}&freeShipping=true",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "category",
									"value": "{{categoria}}"
								},
								{
									"key": "freeShipping",
									"value": "true"
								}
							]
						},
						"description": "Endpoint para retornar uma lista de produtos com mais de um filtro."
					},
					"response": []
				},
				{
					"name": "Filtro frete grátis e avaliação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})",
									"",
									"pm.test(\"Teste de lista vazia\", function() {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.length).to.eql(3);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles?freeShipping=true&prestige=****",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "freeShipping",
									"value": "true"
								},
								{
									"key": "prestige",
									"value": "****"
								}
							]
						},
						"description": "Endpoint para retornar uma lista de produtos com mais de um filtro."
					},
					"response": []
				},
				{
					"name": "Filtro com ordem alfabética crescente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles?category={{categoria}}&freeShipping=true&order=0",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "category",
									"value": "{{categoria}}"
								},
								{
									"key": "freeShipping",
									"value": "true"
								},
								{
									"key": "order",
									"value": "0"
								}
							]
						},
						"description": "Endpoint para retornar uma lista de produtos ordenada alfabeticamente crescente."
					},
					"response": []
				},
				{
					"name": "Filtro com ordem alfabética decrescente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles?category={{categoria}}&freeShipping=true&order=1",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "category",
									"value": "{{categoria}}"
								},
								{
									"key": "freeShipping",
									"value": "true"
								},
								{
									"key": "order",
									"value": "1"
								}
							]
						},
						"description": "Endpoint para retornar uma lista de produtos ordenada alfabeticamente decrescente."
					},
					"response": []
				},
				{
					"name": "Filtro com ordem por maior preço",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles?category={{categoria}}&freeShipping=true&order=2",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "category",
									"value": "{{categoria}}"
								},
								{
									"key": "freeShipping",
									"value": "true"
								},
								{
									"key": "order",
									"value": "2"
								}
							]
						},
						"description": "Endpoint para retornar uma lista de produtos ordenada pelo maior preço."
					},
					"response": []
				},
				{
					"name": "Filtro com ordem por menor preço",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/articles?category={{categoria}}&freeShipping=true&order=3",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"articles"
							],
							"query": [
								{
									"key": "category",
									"value": "{{categoria}}"
								},
								{
									"key": "freeShipping",
									"value": "true"
								},
								{
									"key": "order",
									"value": "3"
								}
							]
						},
						"description": "Endpoint para retornar uma lista de produtos ordenada pelo menor preço."
					},
					"response": []
				}
			]
		},
		{
			"name": "Clientes",
			"item": [
				{
					"name": "Cadastro de cliente válido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 201\", function() {",
									"    pm.response.to.have.status(201);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"pedro\",\n  \"email\": \"pedro@example.com\",\n  \"city\": \"Santo Ângelo\",\n  \"state\": \"RS\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/customers",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro de clientes sem name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"pedro@example.com\",\n  \"city\": \"Santo Ângelo\",\n  \"state\": \"RS\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/customers",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro de cliente sem email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"pedro\",\n  \"city\": \"Santo Ângelo\",\n  \"state\": \"RS\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/customers",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro de cliente com email repetido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const echoPostRequest = {",
									"  ",
									"  url: 'localhost:8080/api/v1/customers',",
									"  method: 'POST',",
									"  header: {",
									"        'content-type': 'application/json',",
									"    },",
									"  body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify({",
									"            \"name\": \"Bruna\",",
									"            \"email\": \"bruna@example.com\",",
									"            \"city\": \"São José\",",
									"            \"state\": \"SC\"",
									"        })",
									"    }",
									"};",
									"pm.sendRequest(echoPostRequest, function (err, response) {",
									"    var data = response.json();",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Bruna Donadel\",\n    \"email\": \"bruna@example.com\",\n    \"city\": \"São José\",\n    \"state\": \"SC\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/customers",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro de cliente sem city",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"pedro\",\n  \"email\": \"pedro@example.com\",\n  \"state\": \"RS\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/customers",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro de cliente sem state",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"pedro\",\n  \"email\": \"pedro@example.com\",\n  \"city\": \"Santo Ângelo\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/customers",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cadastro de cliente sem body",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/customers",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							]
						}
					},
					"response": []
				},
				{
					"name": "Lista de clientes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 200\", function() {",
									"    pm.response.to.have.status(200);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base}}/api/v1/customers",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"customers"
							],
							"query": [
								{
									"key": "state",
									"value": "RS",
									"disabled": true
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Compras",
			"item": [
				{
					"name": "Solicitação de compra válida",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const echoPostRequest = {",
									"  ",
									"  url: 'localhost:8080/api/v1/insert-articles-request',",
									"  method: 'POST',",
									"  header: {",
									"        'content-type': 'application/json',",
									"    },",
									"  body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify([{",
									"            \"name\":\"Serra de Bancada\",",
									"            \"category\":\"Ferramentas\",",
									"            \"brand\":\"FORTGPRO\",",
									"            \"price\":1800.00,",
									"            \"quantity\":5,",
									"            \"freeShipping\":true,",
									"            \"prestige\":\"****\"",
									"        }])",
									"    }",
									"};",
									"pm.sendRequest(echoPostRequest, function (err, response) {",
									"    var data = response.json();",
									"    pm.environment.set(\"productId\", data[0].productId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 201\", function() {",
									"    pm.response.to.have.status(201);",
									"})",
									"",
									"pm.test(\"Teste de total\", function() {",
									"    pm.response.to.have.jsonBody(\"total\");",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"productId\":\"{{productId}}\",\n        \"quantity\": 5\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/purchase-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"purchase-request"
							]
						},
						"description": "Endpoint para realizar o cadastro de uma compra dada uma lista de produtos."
					},
					"response": []
				},
				{
					"name": "Solicitação de compra sem estoque",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const echoPostRequest = {",
									"  ",
									"  url: 'localhost:8080/api/v1/insert-articles-request',",
									"  method: 'POST',",
									"  header: {",
									"        'content-type': 'application/json',",
									"    },",
									"  body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify([{",
									"            \"name\":\"Serra de Bancada\",",
									"            \"category\":\"Ferramentas\",",
									"            \"brand\":\"FORTGPRO\",",
									"            \"price\":1800.00,",
									"            \"quantity\":5,",
									"            \"freeShipping\":true,",
									"            \"prestige\":\"****\"",
									"        }])",
									"    }",
									"};",
									"pm.sendRequest(echoPostRequest, function (err, response) {",
									"    var data = response.json();",
									"    pm.environment.set(\"productId\", data[0].productId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 400\", function() {",
									"    pm.response.to.have.status(400);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"productId\":\"{{productId}}\",\n        \"quantity\": 8\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/purchase-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"purchase-request"
							]
						},
						"description": "Endpoint para realizar o cadastro de uma compra dada uma lista de produtos."
					},
					"response": []
				},
				{
					"name": "Solicitação de compra com id errado",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"const echoPostRequest = {",
									"  ",
									"  url: 'localhost:8080/api/v1/insert-articles-request',",
									"  method: 'POST',",
									"  header: {",
									"        'content-type': 'application/json',",
									"    },",
									"  body: {",
									"        mode: 'raw',",
									"        raw: JSON.stringify([{",
									"            \"name\":\"Serra de Bancada\",",
									"            \"category\":\"Ferramentas\",",
									"            \"brand\":\"FORTGPRO\",",
									"            \"price\":1800.00,",
									"            \"quantity\":1,",
									"            \"freeShipping\":true,",
									"            \"prestige\":\"****\"",
									"        }])",
									"    }",
									"};",
									"pm.sendRequest(echoPostRequest, function (err, response) {",
									"    var data = response.json();",
									"    pm.environment.set(\"productId\", data[0].productId);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Teste de status 404\", function() {",
									"    pm.response.to.have.status(404);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\n    {\n        \"productId\":\"d56e0010-1afd-4df5-b2a1-6dfbac8c0a3e\",\n        \"quantity\": 1\n    }\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base}}/api/v1/purchase-request",
							"host": [
								"{{base}}"
							],
							"path": [
								"api",
								"v1",
								"purchase-request"
							]
						},
						"description": "Endpoint para realizar o cadastro de uma compra dada uma lista de produtos."
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base",
			"value": "http://localhost:8080"
		},
		{
			"key": "categoria",
			"value": "Ferramentas"
		}
	]
}